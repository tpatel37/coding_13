{"version":3,"file":"components-Dropdown-Dropdown-stories.ca5ebaf3.iframe.bundle.js","mappings":";;;;AAaA;AACA;AACA","sources":["webpack://my-component-library/./src/components/Dropdown/Dropdown.tsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport type DropdownProps = {\n  options: string[];\n  onChange?: (value: string) => void; // Ensure onChange is optional\n  disabled?: boolean;\n};\n\nconst StyledSelect = styled.select`\n  padding: 10px;\n  border: 1px solid #ccc;\n  font-size: 16px;\n  cursor: ${(props) => (props.disabled ? \"not-allowed\" : \"pointer\")};\n  background-color: ${(props) => (props.disabled ? \"#f0f0f0\" : \"white\")};\n`;\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  options,\n  onChange = () => {},\n  disabled = false,\n}) => {\n  return (\n    <StyledSelect\n      onChange={(e) => onChange?.(e.target.value)}\n      disabled={disabled}\n    >\n      {options.map((option, index) => (\n        <option key={index} value={option}>\n          {option}\n        </option>\n      ))}\n    </StyledSelect>\n  );\n};\n\nexport default Dropdown;\n"],"names":[],"sourceRoot":""}